name: Remote Service CI

on:
  push:

jobs:
  build-users:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/app-users:${{ github.sha }} --build-arg SERVER_DIR="users" --network=host . -f ./remote/Dockerfile
      - name: push the Docker image
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push the Docker image
        run:
          docker tag ghcr.io/${{ github.repository_owner }}/app-users:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/app-users:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/app-users:${{ github.sha }}

  build-challenges:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/app-challenges:${{ github.sha }} --build-arg SERVER_DIR="challenges" --network=host . -f ./remote/Dockerfile
      - name: push the Docker image
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push the Docker image
        run:
          docker tag ghcr.io/${{ github.repository_owner }}/app-challenges:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/app-challenges:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/app-challenges:${{ github.sha }}

  build-features:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/app-features:${{ github.sha }} --build-arg SERVER_DIR="features" --network=host . -f ./remote/Dockerfile
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push the Docker image
        run:
          docker tag ghcr.io/${{ github.repository_owner }}/app-features:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/app-features:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/app-features:${{ github.sha }}

  build-flashcards:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/app-flashcards:${{ github.sha }} --build-arg SERVER_DIR="flashcards" --network=host . -f ./remote/Dockerfile
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push the Docker image
        run:
          docker tag ghcr.io/${{ github.repository_owner }}/app-flashcards:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/app-flashcards:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/app-flashcards:${{ github.sha }}

  build-notes:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/app-notes:${{ github.sha }} --build-arg SERVER_DIR="notes" --network=host . -f ./remote/Dockerfile
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push the Docker image
        run:
          docker tag ghcr.io/${{ github.repository_owner }}/app-notes:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/app-notes:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/app-notes:${{ github.sha }}

